plugins {
    id 'java'
    id "com.google.protobuf" version "0.8.8"
    id "org.flywaydb.flyway" version "5.2.4"
}

group 'com.divya'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    jcenter()
}

dependencies {
    compile "com.google.protobuf:protobuf-java:3.6.1"

    compile group: 'io.grpc', name: 'grpc-protobuf', version: '1.19.0'
    compile group: 'io.grpc', name: 'grpc-stub', version: '1.19.0'
    compile group: 'io.grpc', name: 'grpc-netty-shaded', version: '1.19.0'
    compile group: 'io.grpc', name: 'grpc-netty', version: '1.19.0'

    compile group: 'com.zaxxer', name: 'HikariCP', version: '2.7.1'
    compile group: 'org.postgresql', name: 'postgresql', version: '9.4.1212'
    compile group: 'org.flywaydb', name: 'flyway-core', version: '4.2.0'
    compile group: 'org.jdbi', name: 'jdbi', version: '2.78'
    compile 'org.antlr:stringtemplate:3.2.1'

    compile 'org.apache.kafka:kafka-clients:0.10.2.1'
    compile 'org.apache.kafka:kafka-streams:0.10.2.1'
    compile 'org.slf4j:slf4j-api:1.7.24'
    compile 'org.slf4j:jul-to-slf4j:1.7.24'

    compile 'org.apache.kafka:kafka_2.11:0.11.0.1'
    compile 'org.apache.kafka:kafka_2.11:0.11.0.1:test'
    
    compile 'com.github.stefanbirkner:system-rules:1.16.1'

    compile 'com.gojek:jfigaro:1.2.2'
    compile "com.ecwid.consul:consul-api:1.3.1"
    
    testCompile group: 'commons-io', name: 'commons-io', version: '2.5'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    testCompile group: 'io.grpc', name: 'grpc-testing', version: '1.20.0'
    testCompile 'com.jayway.awaitility:awaitility:1.7.0'
    compile group: 'org.apache.kafka', name: 'kafka-streams', version: '0.11.0.1'
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '0.11.0.1'

}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10.0'
}
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }

        proto {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }


    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.7.0"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.19.0"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

flyway {
    //Execute `docker-compose run --service-ports -d db to start PostGres with below configuration`
    url = 'jdbc:postgresql://localhost:5432/greeting_test'
    user = 'postgres'
    password = 'postgres'
}

task startServer(type: JavaExec) {
    main = "com.divya.greetings.GreetServer"
    description = "Starts server."
    classpath = sourceSets.main.runtimeClasspath
    systemProperties = [
            "user.timezone": "UTC"
    ]
}

task startClient(type: JavaExec) {
    main = "com.divya.greetings.GreetClient"
    description = "Client listening "
    classpath = sourceSets.main.runtimeClasspath
    systemProperties = [
            "user.timezone": "UTC"
    ]
}

task startConsumer(type: JavaExec) {
    main = "com.divya.greetings.kafka.KafkaConsumer"
    description = "Starts consumer."
    classpath = sourceSets.main.runtimeClasspath
    systemProperties = [
            "user.timezone": "UTC"
    ]
}